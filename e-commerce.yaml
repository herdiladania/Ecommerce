openapi: 3.0.0
info:
  version: 1.0.0
  title: E-Commerce API
  description: Design API for E-Commerce APP by Group 7
servers:
  - description: digunakan untuk mengakses API
    url: https://www.devmyproject.site
    
paths:
  /login:
    post:
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@alta.id
                password:
                  type: string
                  example: pass12345
      responses:
        '200':
          description: login succes
          content:
            application.json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                          name:
                            type: string
                          email:
                            type: string 
                          token:
                            type: string
                  message:
                    type: string
                example:
                  data:
                    name: MyName
                    email: MyEmail@gmail.com
                    token: 12344567890qwertyuiop
                  message: login successfully
                      
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
  /register:
    post:
      tags:
        - Users
      summary: register new user account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSchema'
      responses:
        '201':
          description: successfully register user
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Jhonny
                      hp:
                        type: string
                        example: "0812345678"
                      email:
                        type: string
                        example: Jhonnygmail.com
                      
                  message:
                    type: string
                    example: successfully register user
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
  
    
  /users:
    get:
      tags:
        - Users
      summary: user's profile
      description: digunakan untuk melihat profil pengguna
      responses:
        '200':
          description: get user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Jhonny
                          email:
                            type: string
                            example: Jhonnygmail.com
                          image:
                            type: string 
                            example : image1.jpg
                      products:
                        type: array
                        items:
                          type: object
                          properties:
                            id: 
                              type: integer
                            name: 
                              type : string
                            price: 
                              type: integer
                            qty:
                              type: integer
                        example:
                          - id: 20
                            name: Macbook Air Pro 2023
                            price: 25000000
                            qty: 20
                          - id: 23
                            name: Asus Rog Strix X
                            price: 23000000
                            qty: 20
                        
                  message:
                    type: string
                    example: successfully get user profile
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
    put:
      tags:
        - Users
      summary: update user's profile
      description: digunakan untuk mengedit profil/data pengguna
      security:
        - jwt_auth: []
      
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsersUpdateSchema'
      responses:
      
        '200':
          description: register user
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Jhonny
                      hp:
                        type: string
                        example: "0812345678"
                      email:
                        type: string
                        example: Jhonnygmail.com
                      address:
                        type: string
                        example: Jl. Merdeka 17, Jakarta
                  message:
                    type: string
                    example: successfully updated user
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
    delete:
      tags:
        - Users
      summary: delete user's account
      security:
        - jwt_auth: []
      
      responses:
        '200':
          description: register user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: successfully deleted user
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
  /products:
    post:
      tags:
        - Products
      summary: add product
      security:
        - jwt_auth: []
      
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSchema'
                
      responses:
        '201':
          description: add new product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id : 
                        type: integer
                        example: 1
                      name: 
                        type: string
                        example: Mouse Gaming
                      price:
                        type: number
                        example: 500000
                      qty: 
                        type: integer
                        example: 10
                      description:
                        type: string
                        example: Mouse gaming murah
                      image:
                        type: string
                        example: imagepoduct1.jpg
                  message:
                    type: string
                    example: successfully add new product
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
    get:
      tags:
        - Products
      summary: show all products
      description: digunakan untuk menampilkan semua produk, tidak perlu login
      responses:
        '200':
          description: get all products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfProductSchema'
                
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
  /products/{product_id}:
    get:
      tags:
        - Products
      summary: show a product's detail
      parameters:
        - in: path
          name: product_id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          description: get products by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      name:
                        type: string
                        example: Lenovo Rx25
                      price:
                        type: integer
                        example: 25000
                      qty:
                        type: integer
                        example: 20
                      description:
                        type: string
                      image:
                        type: string
                  message: 
                    type: string
                    example: successfully get product by id
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
    put:
      tags:
        - Products
      summary: update a product's data
      security:
        - jwt_auth: []
      
      parameters:
        - in: path
          name: product_id
          schema:
            type: number
            example: 1
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSchema'
      responses:
        '200':
          description: update product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id : 
                        type: integer
                        example: 1
                      name: 
                        type: string
                        example: Mouse Gaming
                      price:
                        type: number
                        example: 650000
                      qty: 
                        type: integer
                        example: 20
                      description:
                        type: string
                        example: Mouse gaming murah
                      image:
                        type: string
                        example: imagepoduct1.jpg
                  message:
                    type: string
                    example: successfully updated product
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
    delete:
      tags:
        - Products
      summary: delete a product
      security:
        - jwt_auth: []
      
      parameters:
        - in: path
          name: product_id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          description: delete product
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: successfully deletede product
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
  /cart:
    
    post:
      tags:
        - Cart
      summary: add a cart
      security:
        - jwt_auth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartSchema'
      responses:
        '201':
          description: add product to cart add
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_id : 
                        type: integer
                        example: 1
                      qty: 
                        type: integer
                        example: 2
                  message:
                    type: string
                    example: successfully add to cart
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
    get:
      tags:
        - Cart
      summary: show cart's detail
      security:
        - jwt_auth: []
      responses:
        '200':
          description: get all cart
          content:
            application/json:
              schema:
               type: object
               properties:
                data:
                  type: array
                  items:
                    type: object
                message:
                  type: string
              example:
                data:
                  - id : 1
                    qty : 2
                    total_price : 500000
                    product_id : 29
                    product_name : asus rog
                    product_image : product29.jpg
                  - id : 2
                    qty : 5
                    total_price : 990000
                    product_id : 31
                    product_name : tas laptop
                    product_image : produc31.jpg
                message : successfully get all cart
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
  /cart/{cart_id}:
    put:
      tags:
        - Cart
      summary: edit a cart
      security:
        - jwt_auth: []
      parameters:
        - in: path
          name: cart_id
          schema:
            type: number
            example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                qty:
                  type: integer
                  example: 20
      responses:
        '200':
          description: update cart 
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_id : 
                        type: integer
                        example: 1
                      qty: 
                        type: integer
                        example: 2
                  message:
                    type: string
                    example: successfully updated cart
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
    delete:
      tags:
        - Cart
      summary: delete a cart
      security:
        - jwt_auth: []
      parameters:
        - in: path
          name: cart_id
          schema:
            type: number
            example: 1
          required: true
      responses:
        '200':
          description: delet cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: successfully delete cart
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
  /order:
    post:
      tags:
        - Order
      summary: make an order
      security:
        - jwt_auth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSchema'
      responses:
        '201':
          description: add order
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      product_id : 
                        type: integer
                        example: 1
                      qty: 
                        type: integer
                        example: 2
                  message:
                    type: string
                    example: successfully add order
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
    get:
      tags:
        - Order
      summary: show order's detail
      security:
        - jwt_auth: []
      responses:
        '200':
          description: get all order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfOrderSchema'
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
  /order/{order_id}:
    put:
      tags:
        - Order
      summary: edit an order
      description: order ini statusnya cancel atau tidak
      security:
        - jwt_auth: []
      parameters:
        - in: path
          name: order_id
          schema:
            type: number
            example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: cancel
      responses:
        '200':
          description: update order
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: cancel
                  message:
                    type: string
                    example: successfully updated order
        '400':
          $ref: '#/components/responses/Response400'
        '500':
          $ref: '#/components/responses/Response500'
components:
  securitySchemes:
    jwt_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "used JWT token for Auth"
  responses:
    Response400:
      description: bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Bad Request
    Response500:
      description: server error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: server error
  schemas:
    UsersSchema:
      type: object
      properties:
        name:
          type: string
          example: Jhonny
        hp:
          type: number
          example : 081234567897
        email:
          type: string
          example: user@alta.id
        address:
          type: string
          example: Jl. Merdeka 10, Jakarta
        password:
          type: string
          example: qwert54321
    UsersUpdateSchema:
      type: object
      properties:
        name:
          type: string
          example: Jhony
        hp:
          type: number
          example : 081234567897
        email:
          type: string
          example: user@alta.id
        address:
          type: string
          example: Jl. Merdeka 10, Jakarta
        image:
          type: string
          example: image22.jpg
        password:
          type: string
          example: qwert54321
    ProductSchema:
      type: object
      properties:
            id:
              type: integer
              example: 5
            name:
              type: string
              example: Lenovo Rx25
            price:
              type: integer
              example: 25000
            qty:
              type: integer
              example: 20
            description:
              type: string
            image:
              type: string
        
        
    ArrayOfProductSchema:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        message:
          type: string
      example:
        data:
          - id : 1
            name : Asus Rog 
            price : 15000000
            image : product20.jpg
          - id : 2
            name : Lenovo X543
            price : 15000000
            image : product29.jpg
        message: successfully get all products
          
          
    CartSchema:
      type: object
      required:
        - product_id
        - qty
      properties:
        product_id:
          type: integer
          example: 15
        qty:
          type: number
          example: 2
    ArrayOfOrderSchema:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        message:
          type: string
      example:
        data:
          - id : 1
            qty : 2
            total_price : 500000
            product:
              product_id : 29
              product_name : asus rog
              product_image : product29.jpg
              status: in delivery
          - id : 2
            qty : 5
            total_price : 990000
            product:
              product_id : 31
              product_name : tas laptop
              product_image : produc31.jpg
              status: canceled
        message: successfully get all order
            
    OrderSchema:
      type: object
      properties:
        data:
          type: object
          properties:
            cart_id:
              type: array
              items:
                type: integer
                example: 23
            address:
              type: string
              example: Jl. Merdeka 17, Jakarta
            Payment:
              type: object
              properties:
                type:
                  type: string
                  example: "BRI"
                name:
                  type: string
                  example: "Jhonny"
                number:
                  type: string
                  example: "1000-1000-1000-1000"